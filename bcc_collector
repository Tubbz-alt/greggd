#!/usr/bin/env python
# run a daemon to collect bpf info using bcc

from __future__ import print_function
import threading
import time
import logging
from time import sleep, strftime
import argparse
import ctypes as ct
import socket
import sys
import os
import importlib
from os.path import dirname, join, abspath

def collector(subsystem):
    modname = "collectors.{0}".format(subsystem)
    try:
        subsystem = importlib.import_module(modname, package='bcc_collector')
    except ModuleNotFoundError:
        print("subsystem {0} not found".format(modname))
        return

    subsystem.main()

if __name__ == '__main__':
    #TODO: change these hacks
    os.chdir("/usr/src/kernels/{0}".format(os.uname()[2]))
    sys.path.insert(0, '/tmp/bcc_collector')
    threads = list()
    for i in ['biolatency', 'execsnoop']:
        t = threading.Thread(target=collector, args=(i,))
        threads.append(t)
        t.start()

